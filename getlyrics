#!/bin/bash

PS3="Your Input Please  >> "
MPCLYRICSDIR="/home/sanketkrsingh/Music/dmusc/lyrics/mpd_lyrics"
LYRICSSOURCE="w;g;z;e"
ARTISTMESG="================================================================================\n1) Select ARTIST of soundtrack currently being played/paused in mpc player (or)\n2) Enter ARTIST manully\n================================================================================"
TITLEMESG="================================================================================\n1) Select TITLE of soundtrack currently being played/paused in mpc player (or)\n2) Enter TITLE manully\n3) Select to restart\n================================================================================"
ADMESG="================================================================================\n1) Select to view or edit the lyrics file (or)\n2) Select to rename the file as per mpc playlist (or)\n3) Select to download another lyrics (or)\n4) Select to exit\n================================================================================"

function song_artist() {
clear
echo -e $ARTISTMESG
OPTIONS="mpc manual"
select opt in $OPTIONS; do
    if [[ $opt == "mpc" ]]; then
        MPCSTATUS=$(mpc status | awk 'FNR == 2 {print}' | awk '{print $1}')
        if [[ "$MPCSTATUS" == "[playing]" || "$MPCSTATUS" == "[paused]" ]]; then
            Position=`mpc current -f %position%`
            Artist=`mpc current -f %artist%`
            break
        else
            clear
            echo "WARNING: Currently mpc is not running any soundtrack"
            echo "MESSAGE: You may go (2) Manual"
            echo -e $ARTISTMESG
        fi
    elif [[ $opt == "manual" ]]; then
        Position=`mpc current -f %position%`
        read Artist
        echo "MESSAGE: Selecting \"$Artist\" as artist"
        break
    else
        clear
        echo "ERROR: Bad option, please choose the correct option i.e. 1 or 2"
        echo -e $ARTISTMESG
    fi
done
}

function song_title() {
clear
echo "MESSAGE: Selected \"$Artist\" as artist"
echo -e $TITLEMESG
OPTIONS="mpc manual restart"
select opt in $OPTIONS; do
    if [[ $opt == "mpc" ]]; then
        MPCSTATUS=$(mpc status | awk 'FNR == 2 {print}' | awk '{print $1}')
        if [[ "$MPCSTATUS" == "[playing]" || "$MPCSTATUS" == "[paused]" ]]; then
            if [[ $Position == `mpc current -f %position%` ]]; then
                Title=`mpc current -f %title%`
                clear
                echo "MESSAGE: Selecting \"$Title\" as title for artist \"$Artist\""
                echo -e "Quering lyrics sources...\n"
                break
            else
                clear
                echo "WARNING: Soundtrack Changed"
                echo "MESSAGE: Select a TITLE for artist \"$Artist\""
                echo "MESSAGE: Either go (2)Manual or (3)Restart"
                echo -e $TITLEMESG
            fi
        else
            clear
            echo "WARNING: Currently mpc is not running any soundtrack"
            echo "MESSAGE: Either go (2)Manual or (3)Restart"
            echo -e $TITLEMESG
        fi
    elif [[ $opt == "manual" ]]; then
        read Title
        clear
        echo "MESSAGE: Selecting \"$Title\" as title for artist \"$Artist\""
        echo -e "Quering lyrics sources...\n"
        break
    elif [[ $opt == "restart" ]]; then
       main 
    else
        clear
        echo "ERROR: Bad option, please choose the correct option i.e. 1 or 2"
        echo "MESSAGE: Now Select a TITLE for artist \"$Artist\""
        echo -e $TITLEMESG
    fi
done
}

function after_down() {
echo -e $ADMESG
OPTIONS="view rename download exit"
select opt in $OPTIONS; do
    if [[ $opt == "view" ]]; then
        if [[ -f $MPCLYRICSDIR/"$Artist - $Title".txt ]]; then
            clear
            less $MPCLYRICSDIR/"$Artist - $Title".txt
            echo -e $ADMESG
        elif [[ -f $MPCLYRICSDIR/"`mpc current -f %artist%` - `mpc current -f %title%`".txt ]]; then
            clear
            less $MPCLYRICSDIR/"`mpc current -f %artist%` - `mpc current -f %title%`".txt 
            echo -e $ADMESG
        fi
    elif [[ $opt == "rename" ]]; then
        if [[ $Position == `mpc current -f %position%` ]]; then
            if [[ "$Artist - $Title" != "`mpc current -f %artist%` - `mpc current -f %title%`" ]]; then
                mv $MPCLYRICSDIR/"$Artist - $Title".txt $MPCLYRICSDIR/"`mpc current -f %artist%` - `mpc current -f %title%`".txt
                if [[ $? == 0 && -f $MPCLYRICSDIR/"`mpc current -f %artist%` - `mpc current -f %title%`".txt ]]; then
                    clear
                    Artist=`mpc current -f %artist%` && Title=`mpc current -f %title%`
                    echo "MESSAGE: File renamed successfully!"
                    echo -e $ADMESG
                fi
            else
                clear
                echo "MESSAGE: File has already been renamed and is in proper sync with mpc playlist" 
                echo -e $ADMESG
            fi
         else
            clear
            echo "WARNING: Soundtrack Changed"
            echo "MESSAGE: Rename operation not allowed. Select the right track first"
            echo -e $ADMESG
         fi
    elif [[ $opt == "download" ]]; then
        main
    elif [[ $opt == "exit" ]]; then
         clear
         echo "MESSAGE: Operation completed successfully! GoodBye!"
         break
    else
         clear
         echo "ERROR: Bad option, please choose the correct option i.e. 1, 2 or 3"
         echo -e $ADMESG
    fi
done
}

function lyrics_down() {
if [[ ! -f $MPCLYRICSDIR/"$Artist - $Title".txt ]]; then
    glyrc lyrics -f "$LYRICSSOURCE" --artist "$Artist" --title "$Title" -w $MPCLYRICSDIR/:artist:\ -\ :title:.txt && echo "..."
    if [[ $? == 0 && -f $MPCLYRICSDIR/"$Artist - $Title".txt ]]; then
        after_down
    else
        clear
        echo "MESSAGE: Sorry! Lyrics not found for -- Artist:$Artist  Title:$Title"
    fi
else
    clear 
    echo "MESSAGE: Lyrics file "$Artist - $Title".txt already exist!"
    after_down
fi
}

function main() {
clear
song_artist
while true; do
    if [[ -n "$Artist" ]]; then
        song_title
        while [[ ! -n "$Title" ]]; do
            clear
            echo "ERROR: You cannot leave the TITLE field empty!" 
            echo "MESSAGE: Now Select a TITLE for artist \"$Artist\""
            echo "Menu will appear in 5 seconds..."
            sleep 5 && song_title
        done
        break
    else
        clear
        echo "ERROR: You cannot leave the ARTIST field empty!"
        echo "Menu will appear in 5 seconds..."
        sleep 5 && song_artist
    fi
done
lyrics_down

exit 0
}
main
